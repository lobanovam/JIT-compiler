--------------------------------------------------
log file is opened

    ##### in readFile() #####

    buff pointer is 0x55691b6b4680

        ##### in trimSpaces() #####
        ##### out trimSpaces() #####

    lines_count is 11

    ##### out readFile() #####
text is 
---------------------
trebleKeymain[]{
notea=0tatto
learnnotes[a]tatto
notec=atatto
reprise"c>1"
c=c-1tatto
a=a*ctatto
done
play[a]
}


---------------------

in Tokenize


i is 0, curCH is 116, line is 1
found trebleKey
cur ch is m
in getFuncName cur ch is m
result func name is main, its len is 4
after func ch is [


i is 14, curCH is 93, line is 1
found ), end of params


i is 15, curCH is 123, line is 1
found {, start of function


i is 16, curCH is 13, line is 1
found \r 


i is 17, curCH is 10, line is 1
found new line


i is 18, curCH is 110, line is 2
found note
cur ch is n
in getVarName cur ch is a
result var name is a, its len is 1


i is 23, curCH is 61, line is 2
got 1 signed operator


i is 24, curCH is 48, line is 2
found val
res val is 0.000000


i is 25, curCH is 116, line is 2
found tatto


i is 30, curCH is 13, line is 2
found \r 


i is 31, curCH is 10, line is 2
found new line


i is 32, curCH is 108, line is 3
found IN


i is 43, curCH is 97, line is 3
in getVarName cur ch is a
result var name is a, its len is 1


i is 44, curCH is 93, line is 3
found ), end of params


i is 45, curCH is 116, line is 3
found tatto


i is 50, curCH is 13, line is 3
found \r 


i is 51, curCH is 10, line is 3
found new line


i is 52, curCH is 110, line is 4
found note
cur ch is n
in getVarName cur ch is c
result var name is c, its len is 1


i is 57, curCH is 61, line is 4
got 1 signed operator


i is 58, curCH is 97, line is 4
in getVarName cur ch is a
result var name is a, its len is 1


i is 59, curCH is 116, line is 4
found tatto


i is 64, curCH is 13, line is 4
found \r 


i is 65, curCH is 10, line is 4
found new line


i is 66, curCH is 114, line is 5
found WHILE


i is 74, curCH is 99, line is 5
in getVarName cur ch is c
result var name is c, its len is 1


i is 75, curCH is 62, line is 5
got 1 signed operator


i is 76, curCH is 49, line is 5
found val
res val is 1.000000


i is 77, curCH is 34, line is 5
found end of condition


i is 78, curCH is 13, line is 5
found \r 


i is 79, curCH is 10, line is 5
found new line


i is 80, curCH is 99, line is 6
in getVarName cur ch is c
result var name is c, its len is 1


i is 81, curCH is 61, line is 6
got 1 signed operator


i is 82, curCH is 99, line is 6
in getVarName cur ch is c
result var name is c, its len is 1


i is 83, curCH is 45, line is 6
got 1 signed operator


i is 84, curCH is 49, line is 6
found val
res val is 1.000000


i is 85, curCH is 116, line is 6
found tatto


i is 90, curCH is 13, line is 6
found \r 


i is 91, curCH is 10, line is 6
found new line


i is 92, curCH is 97, line is 7
in getVarName cur ch is a
result var name is a, its len is 1


i is 93, curCH is 61, line is 7
got 1 signed operator


i is 94, curCH is 97, line is 7
in getVarName cur ch is a
result var name is a, its len is 1


i is 95, curCH is 42, line is 7
got 1 signed operator


i is 96, curCH is 99, line is 7
in getVarName cur ch is c
result var name is c, its len is 1


i is 97, curCH is 116, line is 7
found tatto


i is 102, curCH is 13, line is 7
found \r 


i is 103, curCH is 10, line is 7
found new line


i is 104, curCH is 100, line is 8
found ENDIF


i is 108, curCH is 13, line is 8
found \r 


i is 109, curCH is 10, line is 8
found new line


i is 110, curCH is 112, line is 9
found OUT


i is 115, curCH is 97, line is 9
in getVarName cur ch is a
result var name is a, its len is 1


i is 116, curCH is 93, line is 9
found ), end of params


i is 117, curCH is 13, line is 9
found \r 


i is 118, curCH is 10, line is 9
found new line


i is 119, curCH is 125, line is 10
found }, end of function


i is 120, curCH is 13, line is 10
found \r 


i is 121, curCH is 10, line is 10
found new line


i is 122, curCH is 13, line is 11
found \r 


i is 123, curCH is 10, line is 11
found new line


i is 124, curCH is 0, line is 12
trying to tokenDump
0
tokenDump done
END OF IMPUT ON LINE 12
in GetGrammar
in GetGrammar langType is 25
case FUNC
in GetFunc
found EndOfParams
in GetGrammar
in GetGrammar langType is 22
case VAR
trying to get expression
in GetExpression
in GetG
in GetE
in GetT
in GetD
in GetP
in GetN
out GetN
out GetP
out GetD
out GetT
out GetE
out GetG
out GetExpression
got expression
got VAR


current token is 16

continue

in GetGrammar
in GetGrammar langType is 16
case IN
in GetExpression
in GetG
in GetE
in GetT
in GetD
in GetP
in GetN
out GetN
out GetP
out GetD
out GetT
out GetE
out GetG
out GetExpression
found EndOfParams


current token is 22

continue

in GetGrammar
in GetGrammar langType is 22
case VAR
trying to get expression
in GetExpression
in GetG
in GetE
in GetT
in GetD
in GetP
in GetN
out GetN
out GetP
out GetD
out GetT
out GetE
out GetG
out GetExpression
got expression
got VAR


current token is 23

continue

in GetGrammar
in GetGrammar langType is 23
in GetExpression
in GetG
in GetE
in GetT
in GetD
in GetP
in GetN
out GetN
out GetP
out GetD
out GetT
out GetE
out GetG
out GetExpression
in GetExpression
in GetG
in GetE
in GetT
in GetD
in GetP
in GetN
out GetN
out GetP
out GetD
out GetT
out GetE
out GetG
out GetExpression
in GetGrammar
in GetExpression
in GetG
in GetE
in GetT
in GetD
in GetP
in GetN
out GetN
out GetP
out GetD
out GetT
found ADD or SUB
in GetT
in GetD
in GetP
in GetN
out GetN
out GetP
out GetD
out GetT
out GetE
out GetG
out GetExpression


current token is 460014896

continue

in GetGrammar
in GetExpression
in GetG
in GetE
in GetT
in GetD
in GetP
in GetN
out GetN
out GetP
out GetD
in GetD
in GetP
in GetN
out GetN
out GetP
out GetD
out GetT
out GetE
out GetG
out GetExpression
TERMINATIONAL TOKEN OR EoFOO
out GetGrammar
out GetGrammar
case WHILE


current token is 17

continue

in GetGrammar
in GetGrammar langType is 17
case OUT
in GetExpression
in GetG
in GetE
in GetT
in GetD
in GetP
in GetN
out GetN
out GetP
out GetD
out GetT
out GetE
out GetG
out GetExpression
found EndOfParams
TERMINATIONAL TOKEN OR EoFOO
out GetGrammar
out GetGrammar
out GetGrammar
out GetGrammar
out GetGrammar
out GetFunc
got FUNC
TERMINATIONAL TOKEN OR EoFOO
out GetGrammar
in ast dump
0
start reading tree
1st scan is ST
has child
got langop 18
spec node created
start reading tree
1st scan is FUNC
has child
got langop 24
spec node created
start reading tree
1st scan is "main"
has child
got langop 0
ch_count before val = 0
ch_count in val = 0
var is main
start reading tree
1st scan is NIL
got langop 21
spec node created
start reading tree
1st scan is TYPE
got langop 27
spec node created
start reading tree
1st scan is ST
has child
got langop 18
spec node created
start reading tree
1st scan is VAR
has child
got langop 22
spec node created
start reading tree
1st scan is "a"
got langop 0
ch_count before val = 2
ch_count in val = 0
var is a
start reading tree
1st scan is 0.0
got langop 0
ch_count before val = 2
ch_count in val = 3
start reading tree
1st scan is ST
has child
got langop 18
spec node created
start reading tree
1st scan is IN
has child
got langop 16
spec node created
start reading tree
1st scan is PARAM
has child
got langop 31
spec node created
start reading tree
1st scan is "a"
got langop 0
ch_count before val = 2
ch_count in val = 0
var is a
start reading tree
1st scan is NIL
got langop 21
spec node created
start reading tree
1st scan is NIL
got langop 21
spec node created
start reading tree
1st scan is ST
has child
got langop 18
spec node created
start reading tree
1st scan is VAR
has child
got langop 22
spec node created
start reading tree
1st scan is "c"
got langop 0
ch_count before val = 2
ch_count in val = 0
var is c
start reading tree
1st scan is "a"
got langop 0
ch_count before val = 2
ch_count in val = 0
var is a
start reading tree
1st scan is ST
has child
got langop 18
spec node created
start reading tree
1st scan is WHILE
has child
got langop 23
spec node created
start reading tree
1st scan is IS_GT
has child
got langop 13
spec node created
start reading tree
1st scan is "c"
got langop 0
ch_count before val = 2
ch_count in val = 0
var is c
start reading tree
1st scan is 1.0
got langop 0
ch_count before val = 2
ch_count in val = 3
start reading tree
1st scan is ST
has child
got langop 18
spec node created
start reading tree
1st scan is EQ
has child
got langop 9
spec node created
start reading tree
1st scan is "c"
got langop 0
ch_count before val = 2
ch_count in val = 0
var is c
start reading tree
1st scan is SUB
has child
got langop 2
spec node created
start reading tree
1st scan is "c"
got langop 0
ch_count before val = 2
ch_count in val = 0
var is c
start reading tree
1st scan is 1.0
got langop 0
ch_count before val = 2
ch_count in val = 3
start reading tree
1st scan is ST
has child
got langop 18
spec node created
start reading tree
1st scan is EQ
has child
got langop 9
spec node created
start reading tree
1st scan is "a"
got langop 0
ch_count before val = 2
ch_count in val = 0
var is a
start reading tree
1st scan is MUL
has child
got langop 4
spec node created
start reading tree
1st scan is "a"
got langop 0
ch_count before val = 2
ch_count in val = 0
var is a
start reading tree
1st scan is "c"
got langop 0
ch_count before val = 2
ch_count in val = 0
var is c
start reading tree
1st scan is NIL
got langop 21
spec node created
start reading tree
1st scan is ST
has child
got langop 18
spec node created
start reading tree
1st scan is OUT
has child
got langop 17
spec node created
start reading tree
1st scan is PARAM
has child
got langop 31
spec node created
start reading tree
1st scan is "a"
got langop 0
ch_count before val = 2
ch_count in val = 0
var is a
start reading tree
1st scan is NIL
got langop 21
spec node created
start reading tree
1st scan is NIL
got langop 21
spec node created
start reading tree
1st scan is NIL
got langop 21
spec node created
start reading tree
1st scan is NIL
got langop 21
spec node created
in ast dump
0


-----------------start translating-----------------
found var type
first assignation done
found var type
first assignation done
found var type
first assignation done
setVarArr done


IN WHILE



log file is closed
--------------------------------------------------
